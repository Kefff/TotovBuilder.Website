{
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:vue/vue3-recommended"
  ],
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "project": true
      },
      "rules": {
        "@typescript-eslint/no-floating-promises": "error",
        "@typescript-eslint/strict-boolean-expressions": [
          "error",
          {
            "allowNullableBoolean": true,
            "allowString": false,
            "allowNumber": false,
            "allowNullableObject": false
          }
        ]
      }
    }
  ],
  "parser": "vue-eslint-parser",
  "parserOptions": {
    "parser": "@typescript-eslint/parser",
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint",
    "eslint-plugin-tsdoc",
    "vue"
  ],
  "root": true,
  "rules": {
    "@typescript-eslint/explicit-function-return-type": "error",
    "@typescript-eslint/explicit-member-accessibility": "error",
    "@typescript-eslint/indent": [
      "warn",
      2
    ],
    "@typescript-eslint/no-unused-vars": "warn",
    "comma-dangle": [
      "warn",
      "never"
    ],
    "no-implicit-coercion": [
      "error",
      {
        "boolean": false
      }
    ],
    "no-restricted-syntax": [
      "error",
      {
        "selector": "FunctionDeclaration[async=false][id.name=/Async$/]",
        "message": "Function ending in 'Async' must be declared async"
      },
      {
        "selector": "FunctionDeclaration[async=true][id.name!=/Async$/]",
        "message": "Async function name must end in 'Async'"
      },
      {
        "selector": "MethodDefinition[value.async=false][key.name=/Async$/]",
        "message": "Method ending in 'Async' must be declared async"
      },
      {
        "selector": "MethodDefinition[value.async=true][key.name!=/Async$/]",
        "message": "Async method name must end in 'Async'"
      },
      {
        "selector": "Property[value.type=/FunctionExpression$/][value.async=true][key.name!=/Promise$/]",
        "message": "Promise property name must end in 'Promise'"
      },
      {
        "selector": "VariableDeclarator[init.type=/FunctionExpression$/][init.async=true][id.name!=/Promise$/]",
        "message": "Promise variable name must end in 'Promise'"
      }
    ],
    "no-trailing-spaces": 1,
    "quotes": [
      "warn",
      "single"
    ],
    "semi": [
      "warn",
      "never"
    ],
    "require-await": "error",
    "tsdoc/syntax": "warn",
    "vue/attribute-hyphenation": [
      "error",
      "always",
      {
        "ignore": [
          "sortField"
        ]
      }
    ],
    "vue/html-indent": [
      "warn",
      2,
      {
        "attribute": 1,
        "baseIndent": 1,
        "closeBracket": 0,
        "alignAttributesVertically": true,
        "ignores": []
      }
    ],
    "vue/multi-word-component-names": "off",
    "vue/no-reserved-component-names": "off",
    "vue/script-setup-uses-vars": 1
  }
}